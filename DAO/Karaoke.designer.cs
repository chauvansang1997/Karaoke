#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbQuanLyKaraoke")]
	public partial class KaraokeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCALAMVIEC(CALAMVIEC instance);
    partial void UpdateCALAMVIEC(CALAMVIEC instance);
    partial void DeleteCALAMVIEC(CALAMVIEC instance);
    partial void InsertTPMONAN(TPMONAN instance);
    partial void UpdateTPMONAN(TPMONAN instance);
    partial void DeleteTPMONAN(TPMONAN instance);
    partial void InsertCHITIETDATPHONG(CHITIETDATPHONG instance);
    partial void UpdateCHITIETDATPHONG(CHITIETDATPHONG instance);
    partial void DeleteCHITIETDATPHONG(CHITIETDATPHONG instance);
    partial void InsertCHITIETGOIMON(CHITIETGOIMON instance);
    partial void UpdateCHITIETGOIMON(CHITIETGOIMON instance);
    partial void DeleteCHITIETGOIMON(CHITIETGOIMON instance);
    partial void InsertCHITIETKM(CHITIETKM instance);
    partial void UpdateCHITIETKM(CHITIETKM instance);
    partial void DeleteCHITIETKM(CHITIETKM instance);
    partial void InsertCHITIETSUDUNGTHIETBI(CHITIETSUDUNGTHIETBI instance);
    partial void UpdateCHITIETSUDUNGTHIETBI(CHITIETSUDUNGTHIETBI instance);
    partial void DeleteCHITIETSUDUNGTHIETBI(CHITIETSUDUNGTHIETBI instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertCTPNSP(CTPNSP instance);
    partial void UpdateCTPNSP(CTPNSP instance);
    partial void DeleteCTPNSP(CTPNSP instance);
    partial void InsertCTPNTB(CTPNTB instance);
    partial void UpdateCTPNTB(CTPNTB instance);
    partial void DeleteCTPNTB(CTPNTB instance);
    partial void InsertDONVI(DONVI instance);
    partial void UpdateDONVI(DONVI instance);
    partial void DeleteDONVI(DONVI instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertLOAIKHACHHANG(LOAIKHACHHANG instance);
    partial void UpdateLOAIKHACHHANG(LOAIKHACHHANG instance);
    partial void DeleteLOAIKHACHHANG(LOAIKHACHHANG instance);
    partial void InsertLOAIMONAN(LOAIMONAN instance);
    partial void UpdateLOAIMONAN(LOAIMONAN instance);
    partial void DeleteLOAIMONAN(LOAIMONAN instance);
    partial void InsertLOAIPHONG(LOAIPHONG instance);
    partial void UpdateLOAIPHONG(LOAIPHONG instance);
    partial void DeleteLOAIPHONG(LOAIPHONG instance);
    partial void InsertLOAISANPHAM(LOAISANPHAM instance);
    partial void UpdateLOAISANPHAM(LOAISANPHAM instance);
    partial void DeleteLOAISANPHAM(LOAISANPHAM instance);
    partial void InsertLUONG(LUONG instance);
    partial void UpdateLUONG(LUONG instance);
    partial void DeleteLUONG(LUONG instance);
    partial void InsertMONAN(MONAN instance);
    partial void UpdateMONAN(MONAN instance);
    partial void DeleteMONAN(MONAN instance);
    partial void InsertNGAYLAMVIEC(NGAYLAMVIEC instance);
    partial void UpdateNGAYLAMVIEC(NGAYLAMVIEC instance);
    partial void DeleteNGAYLAMVIEC(NGAYLAMVIEC instance);
    partial void InsertNGUYENLIEU(NGUYENLIEU instance);
    partial void UpdateNGUYENLIEU(NGUYENLIEU instance);
    partial void DeleteNGUYENLIEU(NGUYENLIEU instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHANCONG(PHANCONG instance);
    partial void UpdatePHANCONG(PHANCONG instance);
    partial void DeletePHANCONG(PHANCONG instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertPHIEUNHAPNGUYENLIEU(PHIEUNHAPNGUYENLIEU instance);
    partial void UpdatePHIEUNHAPNGUYENLIEU(PHIEUNHAPNGUYENLIEU instance);
    partial void DeletePHIEUNHAPNGUYENLIEU(PHIEUNHAPNGUYENLIEU instance);
    partial void InsertPHIEUNHAPSANPHAM(PHIEUNHAPSANPHAM instance);
    partial void UpdatePHIEUNHAPSANPHAM(PHIEUNHAPSANPHAM instance);
    partial void DeletePHIEUNHAPSANPHAM(PHIEUNHAPSANPHAM instance);
    partial void InsertPHIEUNHAPTHIETBI(PHIEUNHAPTHIETBI instance);
    partial void UpdatePHIEUNHAPTHIETBI(PHIEUNHAPTHIETBI instance);
    partial void DeletePHIEUNHAPTHIETBI(PHIEUNHAPTHIETBI instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertQUYDINHTHANHVIEN(QUYDINHTHANHVIEN instance);
    partial void UpdateQUYDINHTHANHVIEN(QUYDINHTHANHVIEN instance);
    partial void DeleteQUYDINHTHANHVIEN(QUYDINHTHANHVIEN instance);
    partial void InsertQUYEN(QUYEN instance);
    partial void UpdateQUYEN(QUYEN instance);
    partial void DeleteQUYEN(QUYEN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertSUDUNGTHIETBI(SUDUNGTHIETBI instance);
    partial void UpdateSUDUNGTHIETBI(SUDUNGTHIETBI instance);
    partial void DeleteSUDUNGTHIETBI(SUDUNGTHIETBI instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTAOMA(TAOMA instance);
    partial void UpdateTAOMA(TAOMA instance);
    partial void DeleteTAOMA(TAOMA instance);
    partial void InsertTHAMSO(THAMSO instance);
    partial void UpdateTHAMSO(THAMSO instance);
    partial void DeleteTHAMSO(THAMSO instance);
    partial void InsertTHIETBI(THIETBI instance);
    partial void UpdateTHIETBI(THIETBI instance);
    partial void DeleteTHIETBI(THIETBI instance);
    partial void InsertTHONGTINDATPHONG(THONGTINDATPHONG instance);
    partial void UpdateTHONGTINDATPHONG(THONGTINDATPHONG instance);
    partial void DeleteTHONGTINDATPHONG(THONGTINDATPHONG instance);
    #endregion
		
		public KaraokeDataContext() : 
				base(global::DAO.Properties.Settings.Default.dbQuanLyKaraokeConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public KaraokeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KaraokeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KaraokeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KaraokeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CALAMVIEC> CALAMVIECs
		{
			get
			{
				return this.GetTable<CALAMVIEC>();
			}
		}
		
		public System.Data.Linq.Table<TPMONAN> TPMONANs
		{
			get
			{
				return this.GetTable<TPMONAN>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDATPHONG> CHITIETDATPHONGs
		{
			get
			{
				return this.GetTable<CHITIETDATPHONG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETGOIMON> CHITIETGOIMONs
		{
			get
			{
				return this.GetTable<CHITIETGOIMON>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETKM> CHITIETKMs
		{
			get
			{
				return this.GetTable<CHITIETKM>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETSUDUNGTHIETBI> CHITIETSUDUNGTHIETBIs
		{
			get
			{
				return this.GetTable<CHITIETSUDUNGTHIETBI>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<CTPNSP> CTPNSPs
		{
			get
			{
				return this.GetTable<CTPNSP>();
			}
		}
		
		public System.Data.Linq.Table<CTPNTB> CTPNTBs
		{
			get
			{
				return this.GetTable<CTPNTB>();
			}
		}
		
		public System.Data.Linq.Table<DANGSUDUNG> DANGSUDUNGs
		{
			get
			{
				return this.GetTable<DANGSUDUNG>();
			}
		}
		
		public System.Data.Linq.Table<DOANHTHU> DOANHTHUs
		{
			get
			{
				return this.GetTable<DOANHTHU>();
			}
		}
		
		public System.Data.Linq.Table<DONVI> DONVIs
		{
			get
			{
				return this.GetTable<DONVI>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<LOAIKHACHHANG> LOAIKHACHHANGs
		{
			get
			{
				return this.GetTable<LOAIKHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAIMONAN> LOAIMONANs
		{
			get
			{
				return this.GetTable<LOAIMONAN>();
			}
		}
		
		public System.Data.Linq.Table<LOAIPHONG> LOAIPHONGs
		{
			get
			{
				return this.GetTable<LOAIPHONG>();
			}
		}
		
		public System.Data.Linq.Table<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this.GetTable<LOAISANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<LUONG> LUONGs
		{
			get
			{
				return this.GetTable<LUONG>();
			}
		}
		
		public System.Data.Linq.Table<MONAN> MONANs
		{
			get
			{
				return this.GetTable<MONAN>();
			}
		}
		
		public System.Data.Linq.Table<NGAYLAMVIEC> NGAYLAMVIECs
		{
			get
			{
				return this.GetTable<NGAYLAMVIEC>();
			}
		}
		
		public System.Data.Linq.Table<NGUYENLIEU> NGUYENLIEUs
		{
			get
			{
				return this.GetTable<NGUYENLIEU>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHANCONG> PHANCONGs
		{
			get
			{
				return this.GetTable<PHANCONG>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAPNGUYENLIEU> PHIEUNHAPNGUYENLIEUs
		{
			get
			{
				return this.GetTable<PHIEUNHAPNGUYENLIEU>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAPSANPHAM> PHIEUNHAPSANPHAMs
		{
			get
			{
				return this.GetTable<PHIEUNHAPSANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAPTHIETBI> PHIEUNHAPTHIETBIs
		{
			get
			{
				return this.GetTable<PHIEUNHAPTHIETBI>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<QUYDINHTHANHVIEN> QUYDINHTHANHVIENs
		{
			get
			{
				return this.GetTable<QUYDINHTHANHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<QUYEN> QUYENs
		{
			get
			{
				return this.GetTable<QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<SUDUNGTHIETBI> SUDUNGTHIETBIs
		{
			get
			{
				return this.GetTable<SUDUNGTHIETBI>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<TAOMA> TAOMAs
		{
			get
			{
				return this.GetTable<TAOMA>();
			}
		}
		
		public System.Data.Linq.Table<THAMSO> THAMSOs
		{
			get
			{
				return this.GetTable<THAMSO>();
			}
		}
		
		public System.Data.Linq.Table<THIETBI> THIETBIs
		{
			get
			{
				return this.GetTable<THIETBI>();
			}
		}
		
		public System.Data.Linq.Table<THONGTINDATPHONG> THONGTINDATPHONGs
		{
			get
			{
				return this.GetTable<THONGTINDATPHONG>();
			}
		}
		
		public System.Data.Linq.Table<TONKHOCT> TONKHOCTs
		{
			get
			{
				return this.GetTable<TONKHOCT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CALAMVIEC")]
	public partial class CALAMVIEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MACA;
		
		private string _TENCA;
		
		private System.Nullable<System.DateTime> _GIOBD;
		
		private System.Nullable<System.DateTime> _GIOKT;
		
		private System.Nullable<long> _TIENLUONG;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACAChanging(int value);
    partial void OnMACAChanged();
    partial void OnTENCAChanging(string value);
    partial void OnTENCAChanged();
    partial void OnGIOBDChanging(System.Nullable<System.DateTime> value);
    partial void OnGIOBDChanged();
    partial void OnGIOKTChanging(System.Nullable<System.DateTime> value);
    partial void OnGIOKTChanged();
    partial void OnTIENLUONGChanging(System.Nullable<long> value);
    partial void OnTIENLUONGChanged();
    #endregion
		
		public CALAMVIEC()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MACA
		{
			get
			{
				return this._MACA;
			}
			set
			{
				if ((this._MACA != value))
				{
					this.OnMACAChanging(value);
					this.SendPropertyChanging();
					this._MACA = value;
					this.SendPropertyChanged("MACA");
					this.OnMACAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCA", DbType="NVarChar(10)")]
		public string TENCA
		{
			get
			{
				return this._TENCA;
			}
			set
			{
				if ((this._TENCA != value))
				{
					this.OnTENCAChanging(value);
					this.SendPropertyChanging();
					this._TENCA = value;
					this.SendPropertyChanged("TENCA");
					this.OnTENCAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOBD", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIOBD
		{
			get
			{
				return this._GIOBD;
			}
			set
			{
				if ((this._GIOBD != value))
				{
					this.OnGIOBDChanging(value);
					this.SendPropertyChanging();
					this._GIOBD = value;
					this.SendPropertyChanged("GIOBD");
					this.OnGIOBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOKT", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIOKT
		{
			get
			{
				return this._GIOKT;
			}
			set
			{
				if ((this._GIOKT != value))
				{
					this.OnGIOKTChanging(value);
					this.SendPropertyChanging();
					this._GIOKT = value;
					this.SendPropertyChanged("GIOKT");
					this.OnGIOKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENLUONG", DbType="BigInt")]
		public System.Nullable<long> TIENLUONG
		{
			get
			{
				return this._TIENLUONG;
			}
			set
			{
				if ((this._TIENLUONG != value))
				{
					this.OnTIENLUONGChanging(value);
					this.SendPropertyChanging();
					this._TIENLUONG = value;
					this.SendPropertyChanged("TIENLUONG");
					this.OnTIENLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CALAMVIEC_PHANCONG", Storage="_PHANCONGs", ThisKey="MACA", OtherKey="MACA")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.CALAMVIEC = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.CALAMVIEC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TPMONAN")]
	public partial class TPMONAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMON;
		
		private string _MANL;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<MONAN> _MONAN;
		
		private EntityRef<NGUYENLIEU> _NGUYENLIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnMANLChanging(string value);
    partial void OnMANLChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public TPMONAN()
		{
			this._MONAN = default(EntityRef<MONAN>);
			this._NGUYENLIEU = default(EntityRef<NGUYENLIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					if (this._MONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANL", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANL
		{
			get
			{
				return this._MANL;
			}
			set
			{
				if ((this._MANL != value))
				{
					if (this._NGUYENLIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANLChanging(value);
					this.SendPropertyChanging();
					this._MANL = value;
					this.SendPropertyChanged("MANL");
					this.OnMANLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_TPMONAN", Storage="_MONAN", ThisKey="MAMON", OtherKey="MAMON", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MONAN MONAN
		{
			get
			{
				return this._MONAN.Entity;
			}
			set
			{
				MONAN previousValue = this._MONAN.Entity;
				if (((previousValue != value) 
							|| (this._MONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONAN.Entity = null;
						previousValue.TPMONANs.Remove(this);
					}
					this._MONAN.Entity = value;
					if ((value != null))
					{
						value.TPMONANs.Add(this);
						this._MAMON = value.MAMON;
					}
					else
					{
						this._MAMON = default(string);
					}
					this.SendPropertyChanged("MONAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENLIEU_TPMONAN", Storage="_NGUYENLIEU", ThisKey="MANL", OtherKey="MANL", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NGUYENLIEU NGUYENLIEU
		{
			get
			{
				return this._NGUYENLIEU.Entity;
			}
			set
			{
				NGUYENLIEU previousValue = this._NGUYENLIEU.Entity;
				if (((previousValue != value) 
							|| (this._NGUYENLIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUYENLIEU.Entity = null;
						previousValue.TPMONANs.Remove(this);
					}
					this._NGUYENLIEU.Entity = value;
					if ((value != null))
					{
						value.TPMONANs.Add(this);
						this._MANL = value.MANL;
					}
					else
					{
						this._MANL = default(string);
					}
					this.SendPropertyChanged("NGUYENLIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDATPHONG")]
	public partial class CHITIETDATPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADATPHONG;
		
		private string _MAPHONG;
		
		private System.Nullable<System.DateTime> _GIOVAO;
		
		private System.Nullable<System.DateTime> _GIORA;
		
		private EntitySet<CHITIETGOIMON> _CHITIETGOIMONs;
		
		private EntityRef<PHONG> _PHONG;
		
		private EntityRef<THONGTINDATPHONG> _THONGTINDATPHONG;
		
		private EntityRef<THONGTINDATPHONG> _THONGTINDATPHONG1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADATPHONGChanging(string value);
    partial void OnMADATPHONGChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnGIOVAOChanging(System.Nullable<System.DateTime> value);
    partial void OnGIOVAOChanged();
    partial void OnGIORAChanging(System.Nullable<System.DateTime> value);
    partial void OnGIORAChanged();
    #endregion
		
		public CHITIETDATPHONG()
		{
			this._CHITIETGOIMONs = new EntitySet<CHITIETGOIMON>(new Action<CHITIETGOIMON>(this.attach_CHITIETGOIMONs), new Action<CHITIETGOIMON>(this.detach_CHITIETGOIMONs));
			this._PHONG = default(EntityRef<PHONG>);
			this._THONGTINDATPHONG = default(EntityRef<THONGTINDATPHONG>);
			this._THONGTINDATPHONG1 = default(EntityRef<THONGTINDATPHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADATPHONG", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADATPHONG
		{
			get
			{
				return this._MADATPHONG;
			}
			set
			{
				if ((this._MADATPHONG != value))
				{
					if ((this._THONGTINDATPHONG.HasLoadedOrAssignedValue || this._THONGTINDATPHONG1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADATPHONGChanging(value);
					this.SendPropertyChanging();
					this._MADATPHONG = value;
					this.SendPropertyChanged("MADATPHONG");
					this.OnMADATPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOVAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIOVAO
		{
			get
			{
				return this._GIOVAO;
			}
			set
			{
				if ((this._GIOVAO != value))
				{
					this.OnGIOVAOChanging(value);
					this.SendPropertyChanging();
					this._GIOVAO = value;
					this.SendPropertyChanged("GIOVAO");
					this.OnGIOVAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIORA", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIORA
		{
			get
			{
				return this._GIORA;
			}
			set
			{
				if ((this._GIORA != value))
				{
					this.OnGIORAChanging(value);
					this.SendPropertyChanging();
					this._GIORA = value;
					this.SendPropertyChanged("GIORA");
					this.OnGIORAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETDATPHONG_CHITIETGOIMON", Storage="_CHITIETGOIMONs", ThisKey="MADATPHONG,MAPHONG", OtherKey="MADATPHONG,MAPHONG")]
		public EntitySet<CHITIETGOIMON> CHITIETGOIMONs
		{
			get
			{
				return this._CHITIETGOIMONs;
			}
			set
			{
				this._CHITIETGOIMONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CHITIETDATPHONG", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CHITIETDATPHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATPHONGs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINDATPHONG_CHITIETDATPHONG", Storage="_THONGTINDATPHONG", ThisKey="MADATPHONG", OtherKey="MADATPHONG", IsForeignKey=true)]
		public THONGTINDATPHONG THONGTINDATPHONG
		{
			get
			{
				return this._THONGTINDATPHONG.Entity;
			}
			set
			{
				THONGTINDATPHONG previousValue = this._THONGTINDATPHONG.Entity;
				if (((previousValue != value) 
							|| (this._THONGTINDATPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THONGTINDATPHONG.Entity = null;
						previousValue.CHITIETDATPHONGs.Remove(this);
					}
					this._THONGTINDATPHONG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATPHONGs.Add(this);
						this._MADATPHONG = value.MADATPHONG;
					}
					else
					{
						this._MADATPHONG = default(string);
					}
					this.SendPropertyChanged("THONGTINDATPHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINDATPHONG_CHITIETDATPHONG1", Storage="_THONGTINDATPHONG1", ThisKey="MADATPHONG", OtherKey="MADATPHONG", IsForeignKey=true)]
		public THONGTINDATPHONG THONGTINDATPHONG1
		{
			get
			{
				return this._THONGTINDATPHONG1.Entity;
			}
			set
			{
				THONGTINDATPHONG previousValue = this._THONGTINDATPHONG1.Entity;
				if (((previousValue != value) 
							|| (this._THONGTINDATPHONG1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THONGTINDATPHONG1.Entity = null;
						previousValue.CHITIETDATPHONGs1.Remove(this);
					}
					this._THONGTINDATPHONG1.Entity = value;
					if ((value != null))
					{
						value.CHITIETDATPHONGs1.Add(this);
						this._MADATPHONG = value.MADATPHONG;
					}
					else
					{
						this._MADATPHONG = default(string);
					}
					this.SendPropertyChanged("THONGTINDATPHONG1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETGOIMONs(CHITIETGOIMON entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETDATPHONG = this;
		}
		
		private void detach_CHITIETGOIMONs(CHITIETGOIMON entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETDATPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETGOIMON")]
	public partial class CHITIETGOIMON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADATPHONG;
		
		private string _MAPHONG;
		
		private string _MASP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<long> _GIA;
		
		private EntityRef<CHITIETDATPHONG> _CHITIETDATPHONG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADATPHONGChanging(string value);
    partial void OnMADATPHONGChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnGIAChanging(System.Nullable<long> value);
    partial void OnGIAChanged();
    #endregion
		
		public CHITIETGOIMON()
		{
			this._CHITIETDATPHONG = default(EntityRef<CHITIETDATPHONG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADATPHONG", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADATPHONG
		{
			get
			{
				return this._MADATPHONG;
			}
			set
			{
				if ((this._MADATPHONG != value))
				{
					if (this._CHITIETDATPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADATPHONGChanging(value);
					this.SendPropertyChanging();
					this._MADATPHONG = value;
					this.SendPropertyChanged("MADATPHONG");
					this.OnMADATPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._CHITIETDATPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="BigInt")]
		public System.Nullable<long> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETDATPHONG_CHITIETGOIMON", Storage="_CHITIETDATPHONG", ThisKey="MADATPHONG,MAPHONG", OtherKey="MADATPHONG,MAPHONG", IsForeignKey=true)]
		public CHITIETDATPHONG CHITIETDATPHONG
		{
			get
			{
				return this._CHITIETDATPHONG.Entity;
			}
			set
			{
				CHITIETDATPHONG previousValue = this._CHITIETDATPHONG.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETDATPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETDATPHONG.Entity = null;
						previousValue.CHITIETGOIMONs.Remove(this);
					}
					this._CHITIETDATPHONG.Entity = value;
					if ((value != null))
					{
						value.CHITIETGOIMONs.Add(this);
						this._MADATPHONG = value.MADATPHONG;
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MADATPHONG = default(string);
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("CHITIETDATPHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETGOIMON", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETGOIMONs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETGOIMONs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETKM")]
	public partial class CHITIETKM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKM;
		
		private int _MALOAIKH;
		
		private System.Nullable<double> _MUCKM;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
		private EntityRef<LOAIKHACHHANG> _LOAIKHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKMChanging(int value);
    partial void OnMAKMChanged();
    partial void OnMALOAIKHChanging(int value);
    partial void OnMALOAIKHChanged();
    partial void OnMUCKMChanging(System.Nullable<double> value);
    partial void OnMUCKMChanged();
    #endregion
		
		public CHITIETKM()
		{
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			this._LOAIKHACHHANG = default(EntityRef<LOAIKHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOAIKH
		{
			get
			{
				return this._MALOAIKH;
			}
			set
			{
				if ((this._MALOAIKH != value))
				{
					if (this._LOAIKHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIKHChanging(value);
					this.SendPropertyChanging();
					this._MALOAIKH = value;
					this.SendPropertyChanged("MALOAIKH");
					this.OnMALOAIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MUCKM", DbType="Float")]
		public System.Nullable<double> MUCKM
		{
			get
			{
				return this._MUCKM;
			}
			set
			{
				if ((this._MUCKM != value))
				{
					this.OnMUCKMChanging(value);
					this.SendPropertyChanging();
					this._MUCKM = value;
					this.SendPropertyChanged("MUCKM");
					this.OnMUCKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKM", Storage="_KHUYENMAI", ThisKey="MAKM", OtherKey="MAKM", IsForeignKey=true)]
		public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.CHITIETKMs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.CHITIETKMs.Add(this);
						this._MAKM = value.MAKM;
					}
					else
					{
						this._MAKM = default(int);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACHHANG_CHITIETKM", Storage="_LOAIKHACHHANG", ThisKey="MALOAIKH", OtherKey="MALOAIKH", IsForeignKey=true)]
		public LOAIKHACHHANG LOAIKHACHHANG
		{
			get
			{
				return this._LOAIKHACHHANG.Entity;
			}
			set
			{
				LOAIKHACHHANG previousValue = this._LOAIKHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIKHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIKHACHHANG.Entity = null;
						previousValue.CHITIETKMs.Remove(this);
					}
					this._LOAIKHACHHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETKMs.Add(this);
						this._MALOAIKH = value.MALOAIKH;
					}
					else
					{
						this._MALOAIKH = default(int);
					}
					this.SendPropertyChanged("LOAIKHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETSUDUNGTHIETBI")]
	public partial class CHITIETSUDUNGTHIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATB;
		
		private string _MASUDUNG;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<SUDUNGTHIETBI> _SUDUNGTHIETBI;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnMASUDUNGChanging(string value);
    partial void OnMASUDUNGChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETSUDUNGTHIETBI()
		{
			this._SUDUNGTHIETBI = default(EntityRef<SUDUNGTHIETBI>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASUDUNG", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASUDUNG
		{
			get
			{
				return this._MASUDUNG;
			}
			set
			{
				if ((this._MASUDUNG != value))
				{
					if (this._SUDUNGTHIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASUDUNGChanging(value);
					this.SendPropertyChanging();
					this._MASUDUNG = value;
					this.SendPropertyChanged("MASUDUNG");
					this.OnMASUDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUDUNGTHIETBI_CHITIETSUDUNGTHIETBI", Storage="_SUDUNGTHIETBI", ThisKey="MASUDUNG", OtherKey="MASUDUNG", IsForeignKey=true)]
		public SUDUNGTHIETBI SUDUNGTHIETBI
		{
			get
			{
				return this._SUDUNGTHIETBI.Entity;
			}
			set
			{
				SUDUNGTHIETBI previousValue = this._SUDUNGTHIETBI.Entity;
				if (((previousValue != value) 
							|| (this._SUDUNGTHIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUDUNGTHIETBI.Entity = null;
						previousValue.CHITIETSUDUNGTHIETBIs.Remove(this);
					}
					this._SUDUNGTHIETBI.Entity = value;
					if ((value != null))
					{
						value.CHITIETSUDUNGTHIETBIs.Add(this);
						this._MASUDUNG = value.MASUDUNG;
					}
					else
					{
						this._MASUDUNG = default(string);
					}
					this.SendPropertyChanged("SUDUNGTHIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CHITIETSUDUNGTHIETBI", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CHITIETSUDUNGTHIETBIs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CHITIETSUDUNGTHIETBIs.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACV;
		
		private string _TENCV;
		
		private System.Nullable<double> _HESOLUONG;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACVChanging(string value);
    partial void OnMACVChanged();
    partial void OnTENCVChanging(string value);
    partial void OnTENCVChanged();
    partial void OnHESOLUONGChanging(System.Nullable<double> value);
    partial void OnHESOLUONGChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACV", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACV
		{
			get
			{
				return this._MACV;
			}
			set
			{
				if ((this._MACV != value))
				{
					this.OnMACVChanging(value);
					this.SendPropertyChanging();
					this._MACV = value;
					this.SendPropertyChanged("MACV");
					this.OnMACVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCV", DbType="NVarChar(50)")]
		public string TENCV
		{
			get
			{
				return this._TENCV;
			}
			set
			{
				if ((this._TENCV != value))
				{
					this.OnTENCVChanging(value);
					this.SendPropertyChanging();
					this._TENCV = value;
					this.SendPropertyChanged("TENCV");
					this.OnTENCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HESOLUONG", DbType="Float")]
		public System.Nullable<double> HESOLUONG
		{
			get
			{
				return this._HESOLUONG;
			}
			set
			{
				if ((this._HESOLUONG != value))
				{
					this.OnHESOLUONGChanging(value);
					this.SendPropertyChanging();
					this._HESOLUONG = value;
					this.SendPropertyChanged("HESOLUONG");
					this.OnHESOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", ThisKey="MACV", OtherKey="MACV")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="MACV", OtherKey="MACV")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPNSP")]
	public partial class CTPNSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _SOPNSP;
		
		private System.Nullable<int> _SOLUONGNHAP;
		
		private EntityRef<PHIEUNHAPSANPHAM> _PHIEUNHAPSANPHAM;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOPNSPChanging(string value);
    partial void OnSOPNSPChanged();
    partial void OnSOLUONGNHAPChanging(System.Nullable<int> value);
    partial void OnSOLUONGNHAPChanged();
    #endregion
		
		public CTPNSP()
		{
			this._PHIEUNHAPSANPHAM = default(EntityRef<PHIEUNHAPSANPHAM>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPNSP", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOPNSP
		{
			get
			{
				return this._SOPNSP;
			}
			set
			{
				if ((this._SOPNSP != value))
				{
					if (this._PHIEUNHAPSANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOPNSPChanging(value);
					this.SendPropertyChanging();
					this._SOPNSP = value;
					this.SendPropertyChanged("SOPNSP");
					this.OnSOPNSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGNHAP", DbType="Int")]
		public System.Nullable<int> SOLUONGNHAP
		{
			get
			{
				return this._SOLUONGNHAP;
			}
			set
			{
				if ((this._SOLUONGNHAP != value))
				{
					this.OnSOLUONGNHAPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGNHAP = value;
					this.SendPropertyChanged("SOLUONGNHAP");
					this.OnSOLUONGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAPSANPHAM_CTPNSP", Storage="_PHIEUNHAPSANPHAM", ThisKey="SOPNSP", OtherKey="SOPNSP", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PHIEUNHAPSANPHAM PHIEUNHAPSANPHAM
		{
			get
			{
				return this._PHIEUNHAPSANPHAM.Entity;
			}
			set
			{
				PHIEUNHAPSANPHAM previousValue = this._PHIEUNHAPSANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAPSANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAPSANPHAM.Entity = null;
						previousValue.CTPNSPs.Remove(this);
					}
					this._PHIEUNHAPSANPHAM.Entity = value;
					if ((value != null))
					{
						value.CTPNSPs.Add(this);
						this._SOPNSP = value.SOPNSP;
					}
					else
					{
						this._SOPNSP = default(string);
					}
					this.SendPropertyChanged("PHIEUNHAPSANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTPNSP", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CTPNSPs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CTPNSPs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPNTB")]
	public partial class CTPNTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATB;
		
		private string _SOPNTB;
		
		private System.Nullable<int> _SOLUONGNHAP;
		
		private EntityRef<PHIEUNHAPTHIETBI> _PHIEUNHAPTHIETBI;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnSOPNTBChanging(string value);
    partial void OnSOPNTBChanged();
    partial void OnSOLUONGNHAPChanging(System.Nullable<int> value);
    partial void OnSOLUONGNHAPChanged();
    #endregion
		
		public CTPNTB()
		{
			this._PHIEUNHAPTHIETBI = default(EntityRef<PHIEUNHAPTHIETBI>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPNTB", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOPNTB
		{
			get
			{
				return this._SOPNTB;
			}
			set
			{
				if ((this._SOPNTB != value))
				{
					if (this._PHIEUNHAPTHIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOPNTBChanging(value);
					this.SendPropertyChanging();
					this._SOPNTB = value;
					this.SendPropertyChanged("SOPNTB");
					this.OnSOPNTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGNHAP", DbType="Int")]
		public System.Nullable<int> SOLUONGNHAP
		{
			get
			{
				return this._SOLUONGNHAP;
			}
			set
			{
				if ((this._SOLUONGNHAP != value))
				{
					this.OnSOLUONGNHAPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGNHAP = value;
					this.SendPropertyChanged("SOLUONGNHAP");
					this.OnSOLUONGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAPTHIETBI_CTPNTB", Storage="_PHIEUNHAPTHIETBI", ThisKey="SOPNTB", OtherKey="SOPNTB", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PHIEUNHAPTHIETBI PHIEUNHAPTHIETBI
		{
			get
			{
				return this._PHIEUNHAPTHIETBI.Entity;
			}
			set
			{
				PHIEUNHAPTHIETBI previousValue = this._PHIEUNHAPTHIETBI.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAPTHIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAPTHIETBI.Entity = null;
						previousValue.CTPNTBs.Remove(this);
					}
					this._PHIEUNHAPTHIETBI.Entity = value;
					if ((value != null))
					{
						value.CTPNTBs.Add(this);
						this._SOPNTB = value.SOPNTB;
					}
					else
					{
						this._SOPNTB = default(string);
					}
					this.SendPropertyChanged("PHIEUNHAPTHIETBI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPNTB", Storage="_THIETBI", ThisKey="MATB", OtherKey="MATB", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CTPNTBs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CTPNTBs.Add(this);
						this._MATB = value.MATB;
					}
					else
					{
						this._MATB = default(string);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANGSUDUNG")]
	public partial class DANGSUDUNG
	{
		
		private string _MAPHONG;
		
		private string _SOHD;
		
		public DANGSUDUNG()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="VarChar(5)")]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this._MAPHONG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOHD", DbType="VarChar(5)")]
		public string SOHD
		{
			get
			{
				return this._SOHD;
			}
			set
			{
				if ((this._SOHD != value))
				{
					this._SOHD = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOANHTHU")]
	public partial class DOANHTHU
	{
		
		private System.Nullable<int> _THANG;
		
		private System.Nullable<int> _NAM;
		
		private System.Nullable<long> _TONGDOANHTHU;
		
		public DOANHTHU()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANG", DbType="Int")]
		public System.Nullable<int> THANG
		{
			get
			{
				return this._THANG;
			}
			set
			{
				if ((this._THANG != value))
				{
					this._THANG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAM", DbType="Int")]
		public System.Nullable<int> NAM
		{
			get
			{
				return this._NAM;
			}
			set
			{
				if ((this._NAM != value))
				{
					this._NAM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGDOANHTHU", DbType="BigInt")]
		public System.Nullable<long> TONGDOANHTHU
		{
			get
			{
				return this._TONGDOANHTHU;
			}
			set
			{
				if ((this._TONGDOANHTHU != value))
				{
					this._TONGDOANHTHU = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONVI")]
	public partial class DONVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADV;
		
		private string _TENDV;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADVChanging(int value);
    partial void OnMADVChanged();
    partial void OnTENDVChanging(string value);
    partial void OnTENDVChanged();
    #endregion
		
		public DONVI()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENDV
		{
			get
			{
				return this._TENDV;
			}
			set
			{
				if ((this._TENDV != value))
				{
					this.OnTENDVChanging(value);
					this.SendPropertyChanging();
					this._TENDV = value;
					this.SendPropertyChanged("TENDV");
					this.OnTENDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONVI_SANPHAM", Storage="_SANPHAMs", ThisKey="MADV", OtherKey="DVT")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MADATPHONG;
		
		private System.Nullable<System.DateTime> _NGAYGIOLAP;
		
		private System.Nullable<long> _THANHTIEN;
		
		private EntityRef<THONGTINDATPHONG> _THONGTINDATPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMADATPHONGChanging(string value);
    partial void OnMADATPHONGChanged();
    partial void OnNGAYGIOLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIOLAPChanged();
    partial void OnTHANHTIENChanging(System.Nullable<long> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public HOADON()
		{
			this._THONGTINDATPHONG = default(EntityRef<THONGTINDATPHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADATPHONG", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string MADATPHONG
		{
			get
			{
				return this._MADATPHONG;
			}
			set
			{
				if ((this._MADATPHONG != value))
				{
					if (this._THONGTINDATPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADATPHONGChanging(value);
					this.SendPropertyChanging();
					this._MADATPHONG = value;
					this.SendPropertyChanged("MADATPHONG");
					this.OnMADATPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIOLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIOLAP
		{
			get
			{
				return this._NGAYGIOLAP;
			}
			set
			{
				if ((this._NGAYGIOLAP != value))
				{
					this.OnNGAYGIOLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIOLAP = value;
					this.SendPropertyChanged("NGAYGIOLAP");
					this.OnNGAYGIOLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="BigInt")]
		public System.Nullable<long> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINDATPHONG_HOADON", Storage="_THONGTINDATPHONG", ThisKey="MADATPHONG", OtherKey="MADATPHONG", IsForeignKey=true)]
		public THONGTINDATPHONG THONGTINDATPHONG
		{
			get
			{
				return this._THONGTINDATPHONG.Entity;
			}
			set
			{
				THONGTINDATPHONG previousValue = this._THONGTINDATPHONG.Entity;
				if (((previousValue != value) 
							|| (this._THONGTINDATPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THONGTINDATPHONG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._THONGTINDATPHONG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MADATPHONG = value.MADATPHONG;
					}
					else
					{
						this._MADATPHONG = default(string);
					}
					this.SendPropertyChanged("THONGTINDATPHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private int _MALOAIKH;
		
		private string _TENKH;
		
		private string _SDT;
		
		private EntitySet<THONGTINDATPHONG> _THONGTINDATPHONGs;
		
		private EntityRef<LOAIKHACHHANG> _LOAIKHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMALOAIKHChanging(int value);
    partial void OnMALOAIKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._THONGTINDATPHONGs = new EntitySet<THONGTINDATPHONG>(new Action<THONGTINDATPHONG>(this.attach_THONGTINDATPHONGs), new Action<THONGTINDATPHONG>(this.detach_THONGTINDATPHONGs));
			this._LOAIKHACHHANG = default(EntityRef<LOAIKHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIKH", DbType="Int NOT NULL")]
		public int MALOAIKH
		{
			get
			{
				return this._MALOAIKH;
			}
			set
			{
				if ((this._MALOAIKH != value))
				{
					if (this._LOAIKHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIKHChanging(value);
					this.SendPropertyChanging();
					this._MALOAIKH = value;
					this.SendPropertyChanged("MALOAIKH");
					this.OnMALOAIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(50)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_THONGTINDATPHONG", Storage="_THONGTINDATPHONGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<THONGTINDATPHONG> THONGTINDATPHONGs
		{
			get
			{
				return this._THONGTINDATPHONGs;
			}
			set
			{
				this._THONGTINDATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACHHANG_KHACHHANG", Storage="_LOAIKHACHHANG", ThisKey="MALOAIKH", OtherKey="MALOAIKH", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LOAIKHACHHANG LOAIKHACHHANG
		{
			get
			{
				return this._LOAIKHACHHANG.Entity;
			}
			set
			{
				LOAIKHACHHANG previousValue = this._LOAIKHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIKHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIKHACHHANG.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._LOAIKHACHHANG.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._MALOAIKH = value.MALOAIKH;
					}
					else
					{
						this._MALOAIKH = default(int);
					}
					this.SendPropertyChanged("LOAIKHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THONGTINDATPHONGs(THONGTINDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_THONGTINDATPHONGs(THONGTINDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKM;
		
		private string _TENKM;
		
		private System.Nullable<System.DateTime> _NGAYBD;
		
		private System.Nullable<System.DateTime> _NGAYKT;
		
		private EntitySet<CHITIETKM> _CHITIETKMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKMChanging(int value);
    partial void OnMAKMChanged();
    partial void OnTENKMChanging(string value);
    partial void OnTENKMChanged();
    partial void OnNGAYBDChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYBDChanged();
    partial void OnNGAYKTChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKTChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._CHITIETKMs = new EntitySet<CHITIETKM>(new Action<CHITIETKM>(this.attach_CHITIETKMs), new Action<CHITIETKM>(this.detach_CHITIETKMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKM", DbType="NVarChar(50)")]
		public string TENKM
		{
			get
			{
				return this._TENKM;
			}
			set
			{
				if ((this._TENKM != value))
				{
					this.OnTENKMChanging(value);
					this.SendPropertyChanging();
					this._TENKM = value;
					this.SendPropertyChanged("TENKM");
					this.OnTENKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBD", DbType="DateTime2")]
		public System.Nullable<System.DateTime> NGAYBD
		{
			get
			{
				return this._NGAYBD;
			}
			set
			{
				if ((this._NGAYBD != value))
				{
					this.OnNGAYBDChanging(value);
					this.SendPropertyChanging();
					this._NGAYBD = value;
					this.SendPropertyChanged("NGAYBD");
					this.OnNGAYBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKT", DbType="DateTime2")]
		public System.Nullable<System.DateTime> NGAYKT
		{
			get
			{
				return this._NGAYKT;
			}
			set
			{
				if ((this._NGAYKT != value))
				{
					this.OnNGAYKTChanging(value);
					this.SendPropertyChanging();
					this._NGAYKT = value;
					this.SendPropertyChanged("NGAYKT");
					this.OnNGAYKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKM", Storage="_CHITIETKMs", ThisKey="MAKM", OtherKey="MAKM")]
		public EntitySet<CHITIETKM> CHITIETKMs
		{
			get
			{
				return this._CHITIETKMs;
			}
			set
			{
				this._CHITIETKMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIKHACHHANG")]
	public partial class LOAIKHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAIKH;
		
		private string _TENLOAIKH;
		
		private System.Nullable<int> _SOTIEMTICHLUY;
		
		private EntitySet<CHITIETKM> _CHITIETKMs;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIKHChanging(int value);
    partial void OnMALOAIKHChanged();
    partial void OnTENLOAIKHChanging(string value);
    partial void OnTENLOAIKHChanged();
    partial void OnSOTIEMTICHLUYChanging(System.Nullable<int> value);
    partial void OnSOTIEMTICHLUYChanged();
    #endregion
		
		public LOAIKHACHHANG()
		{
			this._CHITIETKMs = new EntitySet<CHITIETKM>(new Action<CHITIETKM>(this.attach_CHITIETKMs), new Action<CHITIETKM>(this.detach_CHITIETKMs));
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOAIKH
		{
			get
			{
				return this._MALOAIKH;
			}
			set
			{
				if ((this._MALOAIKH != value))
				{
					this.OnMALOAIKHChanging(value);
					this.SendPropertyChanging();
					this._MALOAIKH = value;
					this.SendPropertyChanged("MALOAIKH");
					this.OnMALOAIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAIKH", DbType="NVarChar(50)")]
		public string TENLOAIKH
		{
			get
			{
				return this._TENLOAIKH;
			}
			set
			{
				if ((this._TENLOAIKH != value))
				{
					this.OnTENLOAIKHChanging(value);
					this.SendPropertyChanging();
					this._TENLOAIKH = value;
					this.SendPropertyChanged("TENLOAIKH");
					this.OnTENLOAIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIEMTICHLUY", DbType="Int")]
		public System.Nullable<int> SOTIEMTICHLUY
		{
			get
			{
				return this._SOTIEMTICHLUY;
			}
			set
			{
				if ((this._SOTIEMTICHLUY != value))
				{
					this.OnSOTIEMTICHLUYChanging(value);
					this.SendPropertyChanging();
					this._SOTIEMTICHLUY = value;
					this.SendPropertyChanged("SOTIEMTICHLUY");
					this.OnSOTIEMTICHLUYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACHHANG_CHITIETKM", Storage="_CHITIETKMs", ThisKey="MALOAIKH", OtherKey="MALOAIKH")]
		public EntitySet<CHITIETKM> CHITIETKMs
		{
			get
			{
				return this._CHITIETKMs;
			}
			set
			{
				this._CHITIETKMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACHHANG_KHACHHANG", Storage="_KHACHHANGs", ThisKey="MALOAIKH", OtherKey="MALOAIKH")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACHHANG = this;
		}
		
		private void detach_CHITIETKMs(CHITIETKM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACHHANG = null;
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACHHANG = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIMONAN")]
	public partial class LOAIMONAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MA;
		
		private string _TENLOAI;
		
		private EntitySet<MONAN> _MONANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAChanging(int value);
    partial void OnMAChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAIMONAN()
		{
			this._MONANs = new EntitySet<MONAN>(new Action<MONAN>(this.attach_MONANs), new Action<MONAN>(this.detach_MONANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIMONAN_MONAN", Storage="_MONANs", ThisKey="MA", OtherKey="LOAIMON")]
		public EntitySet<MONAN> MONANs
		{
			get
			{
				return this._MONANs;
			}
			set
			{
				this._MONANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MONANs(MONAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAIMONAN = this;
		}
		
		private void detach_MONANs(MONAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAIMONAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIPHONG")]
	public partial class LOAIPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAIPHONG;
		
		private string _TENLOAIPHONG;
		
		private System.Nullable<long> _GIA;
		
		private EntitySet<PHONG> _PHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIPHONGChanging(int value);
    partial void OnMALOAIPHONGChanged();
    partial void OnTENLOAIPHONGChanging(string value);
    partial void OnTENLOAIPHONGChanged();
    partial void OnGIAChanging(System.Nullable<long> value);
    partial void OnGIAChanged();
    #endregion
		
		public LOAIPHONG()
		{
			this._PHONGs = new EntitySet<PHONG>(new Action<PHONG>(this.attach_PHONGs), new Action<PHONG>(this.detach_PHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPHONG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOAIPHONG
		{
			get
			{
				return this._MALOAIPHONG;
			}
			set
			{
				if ((this._MALOAIPHONG != value))
				{
					this.OnMALOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPHONG = value;
					this.SendPropertyChanged("MALOAIPHONG");
					this.OnMALOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAIPHONG", DbType="NVarChar(50)")]
		public string TENLOAIPHONG
		{
			get
			{
				return this._TENLOAIPHONG;
			}
			set
			{
				if ((this._TENLOAIPHONG != value))
				{
					this.OnTENLOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENLOAIPHONG = value;
					this.SendPropertyChanged("TENLOAIPHONG");
					this.OnTENLOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="BigInt")]
		public System.Nullable<long> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_PHONGs", ThisKey="MALOAIPHONG", OtherKey="MALOAIPHONG")]
		public EntitySet<PHONG> PHONGs
		{
			get
			{
				return this._PHONGs;
			}
			set
			{
				this._PHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = this;
		}
		
		private void detach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISANPHAM")]
	public partial class LOAISANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MA;
		
		private string _TENLOAI;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAChanging(int value);
    partial void OnMAChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAISANPHAM()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_SANPHAMs", ThisKey="MA", OtherKey="LOAISP")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LUONG")]
	public partial class LUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _THANGLUONG;
		
		private System.Nullable<long> _SOTIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTHANGLUONGChanging(string value);
    partial void OnTHANGLUONGChanged();
    partial void OnSOTIENChanging(System.Nullable<long> value);
    partial void OnSOTIENChanged();
    #endregion
		
		public LUONG()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANGLUONG", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string THANGLUONG
		{
			get
			{
				return this._THANGLUONG;
			}
			set
			{
				if ((this._THANGLUONG != value))
				{
					this.OnTHANGLUONGChanging(value);
					this.SendPropertyChanging();
					this._THANGLUONG = value;
					this.SendPropertyChanged("THANGLUONG");
					this.OnTHANGLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIEN", DbType="BigInt")]
		public System.Nullable<long> SOTIEN
		{
			get
			{
				return this._SOTIEN;
			}
			set
			{
				if ((this._SOTIEN != value))
				{
					this.OnSOTIENChanging(value);
					this.SendPropertyChanging();
					this._SOTIEN = value;
					this.SendPropertyChanged("SOTIEN");
					this.OnSOTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.LUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.LUONGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONAN")]
	public partial class MONAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMON;
		
		private string _TENMON;
		
		private System.Nullable<int> _LOAIMON;
		
		private string _ANHMINHHOA;
		
		private System.Nullable<long> _DONGIA;
		
		private EntitySet<TPMONAN> _TPMONANs;
		
		private EntityRef<LOAIMONAN> _LOAIMONAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnTENMONChanging(string value);
    partial void OnTENMONChanged();
    partial void OnLOAIMONChanging(System.Nullable<int> value);
    partial void OnLOAIMONChanged();
    partial void OnANHMINHHOAChanging(string value);
    partial void OnANHMINHHOAChanged();
    partial void OnDONGIAChanging(System.Nullable<long> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public MONAN()
		{
			this._TPMONANs = new EntitySet<TPMONAN>(new Action<TPMONAN>(this.attach_TPMONANs), new Action<TPMONAN>(this.detach_TPMONANs));
			this._LOAIMONAN = default(EntityRef<LOAIMONAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMON", DbType="NVarChar(50)")]
		public string TENMON
		{
			get
			{
				return this._TENMON;
			}
			set
			{
				if ((this._TENMON != value))
				{
					this.OnTENMONChanging(value);
					this.SendPropertyChanging();
					this._TENMON = value;
					this.SendPropertyChanged("TENMON");
					this.OnTENMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIMON", DbType="Int")]
		public System.Nullable<int> LOAIMON
		{
			get
			{
				return this._LOAIMON;
			}
			set
			{
				if ((this._LOAIMON != value))
				{
					if (this._LOAIMONAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOAIMONChanging(value);
					this.SendPropertyChanging();
					this._LOAIMON = value;
					this.SendPropertyChanged("LOAIMON");
					this.OnLOAIMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHMINHHOA", DbType="NVarChar(100)")]
		public string ANHMINHHOA
		{
			get
			{
				return this._ANHMINHHOA;
			}
			set
			{
				if ((this._ANHMINHHOA != value))
				{
					this.OnANHMINHHOAChanging(value);
					this.SendPropertyChanging();
					this._ANHMINHHOA = value;
					this.SendPropertyChanged("ANHMINHHOA");
					this.OnANHMINHHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="BigInt")]
		public System.Nullable<long> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONAN_TPMONAN", Storage="_TPMONANs", ThisKey="MAMON", OtherKey="MAMON")]
		public EntitySet<TPMONAN> TPMONANs
		{
			get
			{
				return this._TPMONANs;
			}
			set
			{
				this._TPMONANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIMONAN_MONAN", Storage="_LOAIMONAN", ThisKey="LOAIMON", OtherKey="MA", IsForeignKey=true)]
		public LOAIMONAN LOAIMONAN
		{
			get
			{
				return this._LOAIMONAN.Entity;
			}
			set
			{
				LOAIMONAN previousValue = this._LOAIMONAN.Entity;
				if (((previousValue != value) 
							|| (this._LOAIMONAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIMONAN.Entity = null;
						previousValue.MONANs.Remove(this);
					}
					this._LOAIMONAN.Entity = value;
					if ((value != null))
					{
						value.MONANs.Add(this);
						this._LOAIMON = value.MA;
					}
					else
					{
						this._LOAIMON = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAIMONAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TPMONANs(TPMONAN entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = this;
		}
		
		private void detach_TPMONANs(TPMONAN entity)
		{
			this.SendPropertyChanging();
			entity.MONAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGAYLAMVIEC")]
	public partial class NGAYLAMVIEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Ngay;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNgayChanging(System.DateTime value);
    partial void OnNgayChanged();
    #endregion
		
		public NGAYLAMVIEC()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGAYLAMVIEC_PHANCONG", Storage="_PHANCONGs", ThisKey="Ngay", OtherKey="NGAY")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NGAYLAMVIEC = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NGAYLAMVIEC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUYENLIEU")]
	public partial class NGUYENLIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANL;
		
		private string _MANCC;
		
		private string _TENNL;
		
		private string _LOAINL;
		
		private string _DVT;
		
		private System.Nullable<long> _DONGIA;
		
		private System.Nullable<int> _SLTON;
		
		private System.Nullable<int> _SLTOITHIEU;
		
		private System.Nullable<int> _DONGIANHAP;
		
		private EntitySet<TPMONAN> _TPMONANs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANLChanging(string value);
    partial void OnMANLChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENNLChanging(string value);
    partial void OnTENNLChanged();
    partial void OnLOAINLChanging(string value);
    partial void OnLOAINLChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnDONGIAChanging(System.Nullable<long> value);
    partial void OnDONGIAChanged();
    partial void OnSLTONChanging(System.Nullable<int> value);
    partial void OnSLTONChanged();
    partial void OnSLTOITHIEUChanging(System.Nullable<int> value);
    partial void OnSLTOITHIEUChanged();
    partial void OnDONGIANHAPChanging(System.Nullable<int> value);
    partial void OnDONGIANHAPChanged();
    #endregion
		
		public NGUYENLIEU()
		{
			this._TPMONANs = new EntitySet<TPMONAN>(new Action<TPMONAN>(this.attach_TPMONANs), new Action<TPMONAN>(this.detach_TPMONANs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANL", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANL
		{
			get
			{
				return this._MANL;
			}
			set
			{
				if ((this._MANL != value))
				{
					this.OnMANLChanging(value);
					this.SendPropertyChanging();
					this._MANL = value;
					this.SendPropertyChanged("MANL");
					this.OnMANLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNL", DbType="NVarChar(50)")]
		public string TENNL
		{
			get
			{
				return this._TENNL;
			}
			set
			{
				if ((this._TENNL != value))
				{
					this.OnTENNLChanging(value);
					this.SendPropertyChanging();
					this._TENNL = value;
					this.SendPropertyChanged("TENNL");
					this.OnTENNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAINL", DbType="NVarChar(50)")]
		public string LOAINL
		{
			get
			{
				return this._LOAINL;
			}
			set
			{
				if ((this._LOAINL != value))
				{
					this.OnLOAINLChanging(value);
					this.SendPropertyChanging();
					this._LOAINL = value;
					this.SendPropertyChanged("LOAINL");
					this.OnLOAINLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(20)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="BigInt")]
		public System.Nullable<long> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTON", DbType="Int")]
		public System.Nullable<int> SLTON
		{
			get
			{
				return this._SLTON;
			}
			set
			{
				if ((this._SLTON != value))
				{
					this.OnSLTONChanging(value);
					this.SendPropertyChanging();
					this._SLTON = value;
					this.SendPropertyChanged("SLTON");
					this.OnSLTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTOITHIEU", DbType="Int")]
		public System.Nullable<int> SLTOITHIEU
		{
			get
			{
				return this._SLTOITHIEU;
			}
			set
			{
				if ((this._SLTOITHIEU != value))
				{
					this.OnSLTOITHIEUChanging(value);
					this.SendPropertyChanging();
					this._SLTOITHIEU = value;
					this.SendPropertyChanged("SLTOITHIEU");
					this.OnSLTOITHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIANHAP", DbType="Int")]
		public System.Nullable<int> DONGIANHAP
		{
			get
			{
				return this._DONGIANHAP;
			}
			set
			{
				if ((this._DONGIANHAP != value))
				{
					this.OnDONGIANHAPChanging(value);
					this.SendPropertyChanging();
					this._DONGIANHAP = value;
					this.SendPropertyChanged("DONGIANHAP");
					this.OnDONGIANHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUYENLIEU_TPMONAN", Storage="_TPMONANs", ThisKey="MANL", OtherKey="MANL")]
		public EntitySet<TPMONAN> TPMONANs
		{
			get
			{
				return this._TPMONANs;
			}
			set
			{
				this._TPMONANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_NGUYENLIEU", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.NGUYENLIEUs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.NGUYENLIEUs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TPMONANs(TPMONAN entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENLIEU = this;
		}
		
		private void detach_TPMONANs(TPMONAN entity)
		{
			this.SendPropertyChanging();
			entity.NGUYENLIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANCC;
		
		private string _TENNCC;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _LOAIHANGCC;
		
		private EntitySet<NGUYENLIEU> _NGUYENLIEUs;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntitySet<THIETBI> _THIETBIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnLOAIHANGCCChanging(string value);
    partial void OnLOAIHANGCCChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._NGUYENLIEUs = new EntitySet<NGUYENLIEU>(new Action<NGUYENLIEU>(this.attach_NGUYENLIEUs), new Action<NGUYENLIEU>(this.detach_NGUYENLIEUs));
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._THIETBIs = new EntitySet<THIETBI>(new Action<THIETBI>(this.attach_THIETBIs), new Action<THIETBI>(this.detach_THIETBIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(50)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIHANGCC", DbType="NVarChar(50)")]
		public string LOAIHANGCC
		{
			get
			{
				return this._LOAIHANGCC;
			}
			set
			{
				if ((this._LOAIHANGCC != value))
				{
					this.OnLOAIHANGCCChanging(value);
					this.SendPropertyChanging();
					this._LOAIHANGCC = value;
					this.SendPropertyChanged("LOAIHANGCC");
					this.OnLOAIHANGCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_NGUYENLIEU", Storage="_NGUYENLIEUs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<NGUYENLIEU> NGUYENLIEUs
		{
			get
			{
				return this._NGUYENLIEUs;
			}
			set
			{
				this._NGUYENLIEUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_SANPHAM", Storage="_SANPHAMs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_THIETBI", Storage="_THIETBIs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<THIETBI> THIETBIs
		{
			get
			{
				return this._THIETBIs;
			}
			set
			{
				this._THIETBIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NGUYENLIEUs(NGUYENLIEU entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_NGUYENLIEUs(NGUYENLIEU entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
		
		private void attach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENTK;
		
		private string _MACV;
		
		private string _TENNV;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private EntitySet<LUONG> _LUONGs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntitySet<PHIEUNHAPNGUYENLIEU> _PHIEUNHAPNGUYENLIEUs;
		
		private EntitySet<PHIEUNHAPSANPHAM> _PHIEUNHAPSANPHAMs;
		
		private EntitySet<THONGTINDATPHONG> _THONGTINDATPHONGs;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENTKChanging(string value);
    partial void OnTENTKChanged();
    partial void OnMACVChanging(string value);
    partial void OnMACVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._LUONGs = new EntitySet<LUONG>(new Action<LUONG>(this.attach_LUONGs), new Action<LUONG>(this.detach_LUONGs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._PHIEUNHAPNGUYENLIEUs = new EntitySet<PHIEUNHAPNGUYENLIEU>(new Action<PHIEUNHAPNGUYENLIEU>(this.attach_PHIEUNHAPNGUYENLIEUs), new Action<PHIEUNHAPNGUYENLIEU>(this.detach_PHIEUNHAPNGUYENLIEUs));
			this._PHIEUNHAPSANPHAMs = new EntitySet<PHIEUNHAPSANPHAM>(new Action<PHIEUNHAPSANPHAM>(this.attach_PHIEUNHAPSANPHAMs), new Action<PHIEUNHAPSANPHAM>(this.detach_PHIEUNHAPSANPHAMs));
			this._THONGTINDATPHONGs = new EntitySet<THONGTINDATPHONG>(new Action<THONGTINDATPHONG>(this.attach_THONGTINDATPHONGs), new Action<THONGTINDATPHONG>(this.detach_THONGTINDATPHONGs));
			this._CHUCVU = default(EntityRef<CHUCVU>);
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTK", DbType="VarChar(20)")]
		public string TENTK
		{
			get
			{
				return this._TENTK;
			}
			set
			{
				if ((this._TENTK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENTKChanging(value);
					this.SendPropertyChanging();
					this._TENTK = value;
					this.SendPropertyChanged("TENTK");
					this.OnTENTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACV", DbType="Char(4)")]
		public string MACV
		{
			get
			{
				return this._MACV;
			}
			set
			{
				if ((this._MACV != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACVChanging(value);
					this.SendPropertyChanging();
					this._MACV = value;
					this.SendPropertyChanged("MACV");
					this.OnMACVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(50)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG", Storage="_LUONGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<LUONG> LUONGs
		{
			get
			{
				return this._LUONGs;
			}
			set
			{
				this._LUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHANCONG", Storage="_PHANCONGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAPNGUYENLIEU", Storage="_PHIEUNHAPNGUYENLIEUs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUNHAPNGUYENLIEU> PHIEUNHAPNGUYENLIEUs
		{
			get
			{
				return this._PHIEUNHAPNGUYENLIEUs;
			}
			set
			{
				this._PHIEUNHAPNGUYENLIEUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAPSANPHAM", Storage="_PHIEUNHAPSANPHAMs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUNHAPSANPHAM> PHIEUNHAPSANPHAMs
		{
			get
			{
				return this._PHIEUNHAPSANPHAMs;
			}
			set
			{
				this._PHIEUNHAPSANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_THONGTINDATPHONG", Storage="_THONGTINDATPHONGs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<THONGTINDATPHONG> THONGTINDATPHONGs
		{
			get
			{
				return this._THONGTINDATPHONGs;
			}
			set
			{
				this._THONGTINDATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU", ThisKey="MACV", OtherKey="MACV", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MACV = value.MACV;
					}
					else
					{
						this._MACV = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_TAIKHOAN", ThisKey="TENTK", OtherKey="TENTK", IsForeignKey=true, DeleteRule="CASCADE")]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._TENTK = value.TENTK;
					}
					else
					{
						this._TENTK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUNHAPNGUYENLIEUs(PHIEUNHAPNGUYENLIEU entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPNGUYENLIEUs(PHIEUNHAPNGUYENLIEU entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUNHAPSANPHAMs(PHIEUNHAPSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPSANPHAMs(PHIEUNHAPSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_THONGTINDATPHONGs(THONGTINDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_THONGTINDATPHONGs(THONGTINDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANCONG")]
	public partial class PHANCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private int _MACA;
		
		private System.DateTime _NGAY;
		
		private EntityRef<NGAYLAMVIEC> _NGAYLAMVIEC;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<CALAMVIEC> _CALAMVIEC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMACAChanging(int value);
    partial void OnMACAChanged();
    partial void OnNGAYChanging(System.DateTime value);
    partial void OnNGAYChanged();
    #endregion
		
		public PHANCONG()
		{
			this._NGAYLAMVIEC = default(EntityRef<NGAYLAMVIEC>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._CALAMVIEC = default(EntityRef<CALAMVIEC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MACA
		{
			get
			{
				return this._MACA;
			}
			set
			{
				if ((this._MACA != value))
				{
					if (this._CALAMVIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACAChanging(value);
					this.SendPropertyChanging();
					this._MACA = value;
					this.SendPropertyChanged("MACA");
					this.OnMACAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NGAY
		{
			get
			{
				return this._NGAY;
			}
			set
			{
				if ((this._NGAY != value))
				{
					if (this._NGAYLAMVIEC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNGAYChanging(value);
					this.SendPropertyChanging();
					this._NGAY = value;
					this.SendPropertyChanged("NGAY");
					this.OnNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGAYLAMVIEC_PHANCONG", Storage="_NGAYLAMVIEC", ThisKey="NGAY", OtherKey="Ngay", IsForeignKey=true)]
		public NGAYLAMVIEC NGAYLAMVIEC
		{
			get
			{
				return this._NGAYLAMVIEC.Entity;
			}
			set
			{
				NGAYLAMVIEC previousValue = this._NGAYLAMVIEC.Entity;
				if (((previousValue != value) 
							|| (this._NGAYLAMVIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGAYLAMVIEC.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._NGAYLAMVIEC.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._NGAY = value.Ngay;
					}
					else
					{
						this._NGAY = default(System.DateTime);
					}
					this.SendPropertyChanged("NGAYLAMVIEC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHANCONG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CALAMVIEC_PHANCONG", Storage="_CALAMVIEC", ThisKey="MACA", OtherKey="MACA", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CALAMVIEC CALAMVIEC
		{
			get
			{
				return this._CALAMVIEC.Entity;
			}
			set
			{
				CALAMVIEC previousValue = this._CALAMVIEC.Entity;
				if (((previousValue != value) 
							|| (this._CALAMVIEC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CALAMVIEC.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._CALAMVIEC.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MACA = value.MACA;
					}
					else
					{
						this._MACA = default(int);
					}
					this.SendPropertyChanged("CALAMVIEC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACV;
		
		private int _MAQUYEN;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
		private EntityRef<QUYEN> _QUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACVChanging(string value);
    partial void OnMACVChanged();
    partial void OnMAQUYENChanging(int value);
    partial void OnMAQUYENChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._CHUCVU = default(EntityRef<CHUCVU>);
			this._QUYEN = default(EntityRef<QUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACV", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACV
		{
			get
			{
				return this._MACV;
			}
			set
			{
				if ((this._MACV != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACVChanging(value);
					this.SendPropertyChanging();
					this._MACV = value;
					this.SendPropertyChanged("MACV");
					this.OnMACVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUYEN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAQUYEN
		{
			get
			{
				return this._MAQUYEN;
			}
			set
			{
				if ((this._MAQUYEN != value))
				{
					if (this._QUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUYEN = value;
					this.SendPropertyChanged("MAQUYEN");
					this.OnMAQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_PHANQUYEN", Storage="_CHUCVU", ThisKey="MACV", OtherKey="MACV", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._MACV = value.MACV;
					}
					else
					{
						this._MACV = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_PHANQUYEN", Storage="_QUYEN", ThisKey="MAQUYEN", OtherKey="MAQUYEN", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QUYEN QUYEN
		{
			get
			{
				return this._QUYEN.Entity;
			}
			set
			{
				QUYEN previousValue = this._QUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUYEN.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._QUYEN.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._MAQUYEN = value.MAQUYEN;
					}
					else
					{
						this._MAQUYEN = default(int);
					}
					this.SendPropertyChanged("QUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAPNGUYENLIEU")]
	public partial class PHIEUNHAPNGUYENLIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOPNNL;
		
		private string _MANV;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private System.Nullable<long> _THANHTIEN;
		
		private string _NGUOIGIAO;
		
		private string _MANCC;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOPNNLChanging(string value);
    partial void OnSOPNNLChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnTHANHTIENChanging(System.Nullable<long> value);
    partial void OnTHANHTIENChanged();
    partial void OnNGUOIGIAOChanging(string value);
    partial void OnNGUOIGIAOChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    #endregion
		
		public PHIEUNHAPNGUYENLIEU()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPNNL", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOPNNL
		{
			get
			{
				return this._SOPNNL;
			}
			set
			{
				if ((this._SOPNNL != value))
				{
					this.OnSOPNNLChanging(value);
					this.SendPropertyChanging();
					this._SOPNNL = value;
					this.SendPropertyChanged("SOPNNL");
					this.OnSOPNNLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="BigInt")]
		public System.Nullable<long> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGUOIGIAO", DbType="NVarChar(50)")]
		public string NGUOIGIAO
		{
			get
			{
				return this._NGUOIGIAO;
			}
			set
			{
				if ((this._NGUOIGIAO != value))
				{
					this.OnNGUOIGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGUOIGIAO = value;
					this.SendPropertyChanged("NGUOIGIAO");
					this.OnNGUOIGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(5)")]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAPNGUYENLIEU", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPNGUYENLIEUs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPNGUYENLIEUs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAPSANPHAM")]
	public partial class PHIEUNHAPSANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOPNSP;
		
		private string _MANV;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private System.Nullable<long> _THANHTIEN;
		
		private string _NGUOIGIAO;
		
		private string _MANCC;
		
		private EntitySet<CTPNSP> _CTPNSPs;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOPNSPChanging(string value);
    partial void OnSOPNSPChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnTHANHTIENChanging(System.Nullable<long> value);
    partial void OnTHANHTIENChanged();
    partial void OnNGUOIGIAOChanging(string value);
    partial void OnNGUOIGIAOChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    #endregion
		
		public PHIEUNHAPSANPHAM()
		{
			this._CTPNSPs = new EntitySet<CTPNSP>(new Action<CTPNSP>(this.attach_CTPNSPs), new Action<CTPNSP>(this.detach_CTPNSPs));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPNSP", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOPNSP
		{
			get
			{
				return this._SOPNSP;
			}
			set
			{
				if ((this._SOPNSP != value))
				{
					this.OnSOPNSPChanging(value);
					this.SendPropertyChanging();
					this._SOPNSP = value;
					this.SendPropertyChanged("SOPNSP");
					this.OnSOPNSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(5)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="BigInt")]
		public System.Nullable<long> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGUOIGIAO", DbType="NVarChar(50)")]
		public string NGUOIGIAO
		{
			get
			{
				return this._NGUOIGIAO;
			}
			set
			{
				if ((this._NGUOIGIAO != value))
				{
					this.OnNGUOIGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGUOIGIAO = value;
					this.SendPropertyChanged("NGUOIGIAO");
					this.OnNGUOIGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(5)")]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAPSANPHAM_CTPNSP", Storage="_CTPNSPs", ThisKey="SOPNSP", OtherKey="SOPNSP")]
		public EntitySet<CTPNSP> CTPNSPs
		{
			get
			{
				return this._CTPNSPs;
			}
			set
			{
				this._CTPNSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAPSANPHAM", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPSANPHAMs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPSANPHAMs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPNSPs(CTPNSP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAPSANPHAM = this;
		}
		
		private void detach_CTPNSPs(CTPNSP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAPSANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAPTHIETBI")]
	public partial class PHIEUNHAPTHIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOPNTB;
		
		private string _MANV;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private System.Nullable<long> _THANHTIEN;
		
		private string _NGUOIGIAO;
		
		private string _MANCC;
		
		private EntitySet<CTPNTB> _CTPNTBs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOPNTBChanging(string value);
    partial void OnSOPNTBChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnTHANHTIENChanging(System.Nullable<long> value);
    partial void OnTHANHTIENChanged();
    partial void OnNGUOIGIAOChanging(string value);
    partial void OnNGUOIGIAOChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    #endregion
		
		public PHIEUNHAPTHIETBI()
		{
			this._CTPNTBs = new EntitySet<CTPNTB>(new Action<CTPNTB>(this.attach_CTPNTBs), new Action<CTPNTB>(this.detach_CTPNTBs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPNTB", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOPNTB
		{
			get
			{
				return this._SOPNTB;
			}
			set
			{
				if ((this._SOPNTB != value))
				{
					this.OnSOPNTBChanging(value);
					this.SendPropertyChanging();
					this._SOPNTB = value;
					this.SendPropertyChanged("SOPNTB");
					this.OnSOPNTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="BigInt")]
		public System.Nullable<long> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGUOIGIAO", DbType="NVarChar(50)")]
		public string NGUOIGIAO
		{
			get
			{
				return this._NGUOIGIAO;
			}
			set
			{
				if ((this._NGUOIGIAO != value))
				{
					this.OnNGUOIGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGUOIGIAO = value;
					this.SendPropertyChanged("NGUOIGIAO");
					this.OnNGUOIGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(5)")]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAPTHIETBI_CTPNTB", Storage="_CTPNTBs", ThisKey="SOPNTB", OtherKey="SOPNTB")]
		public EntitySet<CTPNTB> CTPNTBs
		{
			get
			{
				return this._CTPNTBs;
			}
			set
			{
				this._CTPNTBs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPNTBs(CTPNTB entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAPTHIETBI = this;
		}
		
		private void detach_CTPNTBs(CTPNTB entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAPTHIETBI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private int _MALOAIPHONG;
		
		private string _TINHTRANG;
		
		private EntitySet<CHITIETDATPHONG> _CHITIETDATPHONGs;
		
		private EntityRef<LOAIPHONG> _LOAIPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnMALOAIPHONGChanging(int value);
    partial void OnMALOAIPHONGChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public PHONG()
		{
			this._CHITIETDATPHONGs = new EntitySet<CHITIETDATPHONG>(new Action<CHITIETDATPHONG>(this.attach_CHITIETDATPHONGs), new Action<CHITIETDATPHONG>(this.detach_CHITIETDATPHONGs));
			this._LOAIPHONG = default(EntityRef<LOAIPHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPHONG", DbType="Int NOT NULL")]
		public int MALOAIPHONG
		{
			get
			{
				return this._MALOAIPHONG;
			}
			set
			{
				if ((this._MALOAIPHONG != value))
				{
					if (this._LOAIPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPHONG = value;
					this.SendPropertyChanged("MALOAIPHONG");
					this.OnMALOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(20)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CHITIETDATPHONG", Storage="_CHITIETDATPHONGs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<CHITIETDATPHONG> CHITIETDATPHONGs
		{
			get
			{
				return this._CHITIETDATPHONGs;
			}
			set
			{
				this._CHITIETDATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_LOAIPHONG", ThisKey="MALOAIPHONG", OtherKey="MALOAIPHONG", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LOAIPHONG LOAIPHONG
		{
			get
			{
				return this._LOAIPHONG.Entity;
			}
			set
			{
				LOAIPHONG previousValue = this._LOAIPHONG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIPHONG.Entity = null;
						previousValue.PHONGs.Remove(this);
					}
					this._LOAIPHONG.Entity = value;
					if ((value != null))
					{
						value.PHONGs.Add(this);
						this._MALOAIPHONG = value.MALOAIPHONG;
					}
					else
					{
						this._MALOAIPHONG = default(int);
					}
					this.SendPropertyChanged("LOAIPHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATPHONGs(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CHITIETDATPHONGs(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUYDINHTHANHVIEN")]
	public partial class QUYDINHTHANHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAIKH;
		
		private System.Nullable<long> _SOTIENTICHLUY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIKHChanging(int value);
    partial void OnMALOAIKHChanged();
    partial void OnSOTIENTICHLUYChanging(System.Nullable<long> value);
    partial void OnSOTIENTICHLUYChanged();
    #endregion
		
		public QUYDINHTHANHVIEN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOAIKH
		{
			get
			{
				return this._MALOAIKH;
			}
			set
			{
				if ((this._MALOAIKH != value))
				{
					this.OnMALOAIKHChanging(value);
					this.SendPropertyChanging();
					this._MALOAIKH = value;
					this.SendPropertyChanged("MALOAIKH");
					this.OnMALOAIKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIENTICHLUY", DbType="BigInt")]
		public System.Nullable<long> SOTIENTICHLUY
		{
			get
			{
				return this._SOTIENTICHLUY;
			}
			set
			{
				if ((this._SOTIENTICHLUY != value))
				{
					this.OnSOTIENTICHLUYChanging(value);
					this.SendPropertyChanging();
					this._SOTIENTICHLUY = value;
					this.SendPropertyChanged("SOTIENTICHLUY");
					this.OnSOTIENTICHLUYChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUYEN")]
	public partial class QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAQUYEN;
		
		private string _TENQUYEN;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAQUYENChanging(int value);
    partial void OnMAQUYENChanged();
    partial void OnTENQUYENChanging(string value);
    partial void OnTENQUYENChanged();
    #endregion
		
		public QUYEN()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUYEN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAQUYEN
		{
			get
			{
				return this._MAQUYEN;
			}
			set
			{
				if ((this._MAQUYEN != value))
				{
					this.OnMAQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUYEN = value;
					this.SendPropertyChanged("MAQUYEN");
					this.OnMAQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENQUYEN", DbType="NVarChar(50)")]
		public string TENQUYEN
		{
			get
			{
				return this._TENQUYEN;
			}
			set
			{
				if ((this._TENQUYEN != value))
				{
					this.OnTENQUYENChanging(value);
					this.SendPropertyChanging();
					this._TENQUYEN = value;
					this.SendPropertyChanged("TENQUYEN");
					this.OnTENQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="MAQUYEN", OtherKey="MAQUYEN")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _MANCC;
		
		private string _TENSP;
		
		private System.Nullable<int> _LOAISP;
		
		private string _ANHMINHHOA;
		
		private System.Nullable<int> _DONGIA;
		
		private System.Nullable<int> _SLTON;
		
		private System.Nullable<int> _SLTOITHIEU;
		
		private System.Nullable<long> _DONGIANHAP;
		
		private System.Nullable<int> _DVT;
		
		private EntitySet<CHITIETGOIMON> _CHITIETGOIMONs;
		
		private EntitySet<CTPNSP> _CTPNSPs;
		
		private EntityRef<LOAISANPHAM> _LOAISANPHAM;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<DONVI> _DONVI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnLOAISPChanging(System.Nullable<int> value);
    partial void OnLOAISPChanged();
    partial void OnANHMINHHOAChanging(string value);
    partial void OnANHMINHHOAChanged();
    partial void OnDONGIAChanging(System.Nullable<int> value);
    partial void OnDONGIAChanged();
    partial void OnSLTONChanging(System.Nullable<int> value);
    partial void OnSLTONChanged();
    partial void OnSLTOITHIEUChanging(System.Nullable<int> value);
    partial void OnSLTOITHIEUChanged();
    partial void OnDONGIANHAPChanging(System.Nullable<long> value);
    partial void OnDONGIANHAPChanged();
    partial void OnDVTChanging(System.Nullable<int> value);
    partial void OnDVTChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETGOIMONs = new EntitySet<CHITIETGOIMON>(new Action<CHITIETGOIMON>(this.attach_CHITIETGOIMONs), new Action<CHITIETGOIMON>(this.detach_CHITIETGOIMONs));
			this._CTPNSPs = new EntitySet<CTPNSP>(new Action<CTPNSP>(this.attach_CTPNSPs), new Action<CTPNSP>(this.detach_CTPNSPs));
			this._LOAISANPHAM = default(EntityRef<LOAISANPHAM>);
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._DONVI = default(EntityRef<DONVI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Char(5)")]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(50)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAISP", DbType="Int")]
		public System.Nullable<int> LOAISP
		{
			get
			{
				return this._LOAISP;
			}
			set
			{
				if ((this._LOAISP != value))
				{
					if (this._LOAISANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOAISPChanging(value);
					this.SendPropertyChanging();
					this._LOAISP = value;
					this.SendPropertyChanged("LOAISP");
					this.OnLOAISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHMINHHOA", DbType="NVarChar(100)")]
		public string ANHMINHHOA
		{
			get
			{
				return this._ANHMINHHOA;
			}
			set
			{
				if ((this._ANHMINHHOA != value))
				{
					this.OnANHMINHHOAChanging(value);
					this.SendPropertyChanging();
					this._ANHMINHHOA = value;
					this.SendPropertyChanged("ANHMINHHOA");
					this.OnANHMINHHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Int")]
		public System.Nullable<int> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTON", DbType="Int")]
		public System.Nullable<int> SLTON
		{
			get
			{
				return this._SLTON;
			}
			set
			{
				if ((this._SLTON != value))
				{
					this.OnSLTONChanging(value);
					this.SendPropertyChanging();
					this._SLTON = value;
					this.SendPropertyChanged("SLTON");
					this.OnSLTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTOITHIEU", DbType="Int")]
		public System.Nullable<int> SLTOITHIEU
		{
			get
			{
				return this._SLTOITHIEU;
			}
			set
			{
				if ((this._SLTOITHIEU != value))
				{
					this.OnSLTOITHIEUChanging(value);
					this.SendPropertyChanging();
					this._SLTOITHIEU = value;
					this.SendPropertyChanged("SLTOITHIEU");
					this.OnSLTOITHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIANHAP", DbType="BigInt")]
		public System.Nullable<long> DONGIANHAP
		{
			get
			{
				return this._DONGIANHAP;
			}
			set
			{
				if ((this._DONGIANHAP != value))
				{
					this.OnDONGIANHAPChanging(value);
					this.SendPropertyChanging();
					this._DONGIANHAP = value;
					this.SendPropertyChanged("DONGIANHAP");
					this.OnDONGIANHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="Int")]
		public System.Nullable<int> DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETGOIMON", Storage="_CHITIETGOIMONs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETGOIMON> CHITIETGOIMONs
		{
			get
			{
				return this._CHITIETGOIMONs;
			}
			set
			{
				this._CHITIETGOIMONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTPNSP", Storage="_CTPNSPs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CTPNSP> CTPNSPs
		{
			get
			{
				return this._CTPNSPs;
			}
			set
			{
				this._CTPNSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_LOAISANPHAM", ThisKey="LOAISP", OtherKey="MA", IsForeignKey=true)]
		public LOAISANPHAM LOAISANPHAM
		{
			get
			{
				return this._LOAISANPHAM.Entity;
			}
			set
			{
				LOAISANPHAM previousValue = this._LOAISANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAISANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISANPHAM.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISANPHAM.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._LOAISP = value.MA;
					}
					else
					{
						this._LOAISP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAISANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_SANPHAM", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true, DeleteRule="CASCADE")]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONVI_SANPHAM", Storage="_DONVI", ThisKey="DVT", OtherKey="MADV", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._DVT = value.MADV;
					}
					else
					{
						this._DVT = default(Nullable<int>);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETGOIMONs(CHITIETGOIMON entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETGOIMONs(CHITIETGOIMON entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CTPNSPs(CTPNSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CTPNSPs(CTPNSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUDUNGTHIETBI")]
	public partial class SUDUNGTHIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASUDUNG;
		
		private string _LYDO;
		
		private System.Nullable<System.DateTime> _NGAY;
		
		private EntitySet<CHITIETSUDUNGTHIETBI> _CHITIETSUDUNGTHIETBIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASUDUNGChanging(string value);
    partial void OnMASUDUNGChanged();
    partial void OnLYDOChanging(string value);
    partial void OnLYDOChanged();
    partial void OnNGAYChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYChanged();
    #endregion
		
		public SUDUNGTHIETBI()
		{
			this._CHITIETSUDUNGTHIETBIs = new EntitySet<CHITIETSUDUNGTHIETBI>(new Action<CHITIETSUDUNGTHIETBI>(this.attach_CHITIETSUDUNGTHIETBIs), new Action<CHITIETSUDUNGTHIETBI>(this.detach_CHITIETSUDUNGTHIETBIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASUDUNG", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASUDUNG
		{
			get
			{
				return this._MASUDUNG;
			}
			set
			{
				if ((this._MASUDUNG != value))
				{
					this.OnMASUDUNGChanging(value);
					this.SendPropertyChanging();
					this._MASUDUNG = value;
					this.SendPropertyChanged("MASUDUNG");
					this.OnMASUDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LYDO", DbType="NVarChar(50)")]
		public string LYDO
		{
			get
			{
				return this._LYDO;
			}
			set
			{
				if ((this._LYDO != value))
				{
					this.OnLYDOChanging(value);
					this.SendPropertyChanging();
					this._LYDO = value;
					this.SendPropertyChanged("LYDO");
					this.OnLYDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY", DbType="DateTime2")]
		public System.Nullable<System.DateTime> NGAY
		{
			get
			{
				return this._NGAY;
			}
			set
			{
				if ((this._NGAY != value))
				{
					this.OnNGAYChanging(value);
					this.SendPropertyChanging();
					this._NGAY = value;
					this.SendPropertyChanged("NGAY");
					this.OnNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUDUNGTHIETBI_CHITIETSUDUNGTHIETBI", Storage="_CHITIETSUDUNGTHIETBIs", ThisKey="MASUDUNG", OtherKey="MASUDUNG")]
		public EntitySet<CHITIETSUDUNGTHIETBI> CHITIETSUDUNGTHIETBIs
		{
			get
			{
				return this._CHITIETSUDUNGTHIETBIs;
			}
			set
			{
				this._CHITIETSUDUNGTHIETBIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETSUDUNGTHIETBIs(CHITIETSUDUNGTHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.SUDUNGTHIETBI = this;
		}
		
		private void detach_CHITIETSUDUNGTHIETBIs(CHITIETSUDUNGTHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.SUDUNGTHIETBI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENTK;
		
		private string _MATKHAU;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENTKChanging(string value);
    partial void OnTENTKChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTK", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENTK
		{
			get
			{
				return this._TENTK;
			}
			set
			{
				if ((this._TENTK != value))
				{
					this.OnTENTKChanging(value);
					this.SendPropertyChanging();
					this._TENTK = value;
					this.SendPropertyChanged("TENTK");
					this.OnTENTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="TENTK", OtherKey="TENTK")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAOMA")]
	public partial class TAOMA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Ten;
		
		private System.Nullable<int> _SOMA;
		
		private System.Nullable<int> _MACUOI;
		
		private string _TIENTO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnSOMAChanging(System.Nullable<int> value);
    partial void OnSOMAChanged();
    partial void OnMACUOIChanging(System.Nullable<int> value);
    partial void OnMACUOIChanged();
    partial void OnTIENTOChanging(string value);
    partial void OnTIENTOChanged();
    #endregion
		
		public TAOMA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(255)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOMA", DbType="Int")]
		public System.Nullable<int> SOMA
		{
			get
			{
				return this._SOMA;
			}
			set
			{
				if ((this._SOMA != value))
				{
					this.OnSOMAChanging(value);
					this.SendPropertyChanging();
					this._SOMA = value;
					this.SendPropertyChanged("SOMA");
					this.OnSOMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACUOI", DbType="Int")]
		public System.Nullable<int> MACUOI
		{
			get
			{
				return this._MACUOI;
			}
			set
			{
				if ((this._MACUOI != value))
				{
					this.OnMACUOIChanging(value);
					this.SendPropertyChanging();
					this._MACUOI = value;
					this.SendPropertyChanged("MACUOI");
					this.OnMACUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENTO", DbType="VarChar(2)")]
		public string TIENTO
		{
			get
			{
				return this._TIENTO;
			}
			set
			{
				if ((this._TIENTO != value))
				{
					this.OnTIENTOChanging(value);
					this.SendPropertyChanging();
					this._TIENTO = value;
					this.SendPropertyChanged("TIENTO");
					this.OnTIENTOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THAMSO")]
	public partial class THAMSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATHAMSO;
		
		private string _TENTHAMSO;
		
		private string _GIATRI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATHAMSOChanging(int value);
    partial void OnMATHAMSOChanged();
    partial void OnTENTHAMSOChanging(string value);
    partial void OnTENTHAMSOChanged();
    partial void OnGIATRIChanging(string value);
    partial void OnGIATRIChanged();
    #endregion
		
		public THAMSO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATHAMSO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MATHAMSO
		{
			get
			{
				return this._MATHAMSO;
			}
			set
			{
				if ((this._MATHAMSO != value))
				{
					this.OnMATHAMSOChanging(value);
					this.SendPropertyChanging();
					this._MATHAMSO = value;
					this.SendPropertyChanged("MATHAMSO");
					this.OnMATHAMSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTHAMSO", DbType="NVarChar(50)")]
		public string TENTHAMSO
		{
			get
			{
				return this._TENTHAMSO;
			}
			set
			{
				if ((this._TENTHAMSO != value))
				{
					this.OnTENTHAMSOChanging(value);
					this.SendPropertyChanging();
					this._TENTHAMSO = value;
					this.SendPropertyChanged("TENTHAMSO");
					this.OnTENTHAMSOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATRI", DbType="NVarChar(50)")]
		public string GIATRI
		{
			get
			{
				return this._GIATRI;
			}
			set
			{
				if ((this._GIATRI != value))
				{
					this.OnGIATRIChanging(value);
					this.SendPropertyChanging();
					this._GIATRI = value;
					this.SendPropertyChanged("GIATRI");
					this.OnGIATRIChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THIETBI")]
	public partial class THIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATB;
		
		private string _MANCC;
		
		private string _TENTB;
		
		private string _LOAITB;
		
		private string _DVT;
		
		private System.Nullable<long> _DONGIA;
		
		private System.Nullable<int> _SLTON;
		
		private System.Nullable<int> _SLTOITHIEU;
		
		private EntitySet<CHITIETSUDUNGTHIETBI> _CHITIETSUDUNGTHIETBIs;
		
		private EntitySet<CTPNTB> _CTPNTBs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATBChanging(string value);
    partial void OnMATBChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENTBChanging(string value);
    partial void OnTENTBChanged();
    partial void OnLOAITBChanging(string value);
    partial void OnLOAITBChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnDONGIAChanging(System.Nullable<long> value);
    partial void OnDONGIAChanged();
    partial void OnSLTONChanging(System.Nullable<int> value);
    partial void OnSLTONChanged();
    partial void OnSLTOITHIEUChanging(System.Nullable<int> value);
    partial void OnSLTOITHIEUChanged();
    #endregion
		
		public THIETBI()
		{
			this._CHITIETSUDUNGTHIETBIs = new EntitySet<CHITIETSUDUNGTHIETBI>(new Action<CHITIETSUDUNGTHIETBI>(this.attach_CHITIETSUDUNGTHIETBIs), new Action<CHITIETSUDUNGTHIETBI>(this.detach_CHITIETSUDUNGTHIETBIs));
			this._CTPNTBs = new EntitySet<CTPNTB>(new Action<CTPNTB>(this.attach_CTPNTBs), new Action<CTPNTB>(this.detach_CTPNTBs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATB", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATB
		{
			get
			{
				return this._MATB;
			}
			set
			{
				if ((this._MATB != value))
				{
					this.OnMATBChanging(value);
					this.SendPropertyChanging();
					this._MATB = value;
					this.SendPropertyChanged("MATB");
					this.OnMATBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTB", DbType="NVarChar(50)")]
		public string TENTB
		{
			get
			{
				return this._TENTB;
			}
			set
			{
				if ((this._TENTB != value))
				{
					this.OnTENTBChanging(value);
					this.SendPropertyChanging();
					this._TENTB = value;
					this.SendPropertyChanged("TENTB");
					this.OnTENTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAITB", DbType="NVarChar(20)")]
		public string LOAITB
		{
			get
			{
				return this._LOAITB;
			}
			set
			{
				if ((this._LOAITB != value))
				{
					this.OnLOAITBChanging(value);
					this.SendPropertyChanging();
					this._LOAITB = value;
					this.SendPropertyChanged("LOAITB");
					this.OnLOAITBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(20)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="BigInt")]
		public System.Nullable<long> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTON", DbType="Int")]
		public System.Nullable<int> SLTON
		{
			get
			{
				return this._SLTON;
			}
			set
			{
				if ((this._SLTON != value))
				{
					this.OnSLTONChanging(value);
					this.SendPropertyChanging();
					this._SLTON = value;
					this.SendPropertyChanged("SLTON");
					this.OnSLTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTOITHIEU", DbType="Int")]
		public System.Nullable<int> SLTOITHIEU
		{
			get
			{
				return this._SLTOITHIEU;
			}
			set
			{
				if ((this._SLTOITHIEU != value))
				{
					this.OnSLTOITHIEUChanging(value);
					this.SendPropertyChanging();
					this._SLTOITHIEU = value;
					this.SendPropertyChanged("SLTOITHIEU");
					this.OnSLTOITHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CHITIETSUDUNGTHIETBI", Storage="_CHITIETSUDUNGTHIETBIs", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CHITIETSUDUNGTHIETBI> CHITIETSUDUNGTHIETBIs
		{
			get
			{
				return this._CHITIETSUDUNGTHIETBIs;
			}
			set
			{
				this._CHITIETSUDUNGTHIETBIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THIETBI_CTPNTB", Storage="_CTPNTBs", ThisKey="MATB", OtherKey="MATB")]
		public EntitySet<CTPNTB> CTPNTBs
		{
			get
			{
				return this._CTPNTBs;
			}
			set
			{
				this._CTPNTBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_THIETBI", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.THIETBIs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.THIETBIs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETSUDUNGTHIETBIs(CHITIETSUDUNGTHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CHITIETSUDUNGTHIETBIs(CHITIETSUDUNGTHIETBI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CTPNTBs(CTPNTB entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CTPNTBs(CTPNTB entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGTINDATPHONG")]
	public partial class THONGTINDATPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADATPHONG;
		
		private string _MAKH;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYNHAN;
		
		private string _MANV;
		
		private System.Nullable<long> _TIENCOC;
		
		private System.Nullable<long> _GIAMGIA;
		
		private System.Nullable<int> _DATHANHTOAN;
		
		private EntitySet<CHITIETDATPHONG> _CHITIETDATPHONGs;
		
		private EntitySet<CHITIETDATPHONG> _CHITIETDATPHONGs1;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADATPHONGChanging(string value);
    partial void OnMADATPHONGChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYNHANChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHANChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTIENCOCChanging(System.Nullable<long> value);
    partial void OnTIENCOCChanged();
    partial void OnGIAMGIAChanging(System.Nullable<long> value);
    partial void OnGIAMGIAChanged();
    partial void OnDATHANHTOANChanging(System.Nullable<int> value);
    partial void OnDATHANHTOANChanged();
    #endregion
		
		public THONGTINDATPHONG()
		{
			this._CHITIETDATPHONGs = new EntitySet<CHITIETDATPHONG>(new Action<CHITIETDATPHONG>(this.attach_CHITIETDATPHONGs), new Action<CHITIETDATPHONG>(this.detach_CHITIETDATPHONGs));
			this._CHITIETDATPHONGs1 = new EntitySet<CHITIETDATPHONG>(new Action<CHITIETDATPHONG>(this.attach_CHITIETDATPHONGs1), new Action<CHITIETDATPHONG>(this.detach_CHITIETDATPHONGs1));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADATPHONG", DbType="Char(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADATPHONG
		{
			get
			{
				return this._MADATPHONG;
			}
			set
			{
				if ((this._MADATPHONG != value))
				{
					this.OnMADATPHONGChanging(value);
					this.SendPropertyChanging();
					this._MADATPHONG = value;
					this.SendPropertyChanged("MADATPHONG");
					this.OnMADATPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAN", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYNHAN
		{
			get
			{
				return this._NGAYNHAN;
			}
			set
			{
				if ((this._NGAYNHAN != value))
				{
					this.OnNGAYNHANChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAN = value;
					this.SendPropertyChanged("NGAYNHAN");
					this.OnNGAYNHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENCOC", DbType="BigInt")]
		public System.Nullable<long> TIENCOC
		{
			get
			{
				return this._TIENCOC;
			}
			set
			{
				if ((this._TIENCOC != value))
				{
					this.OnTIENCOCChanging(value);
					this.SendPropertyChanging();
					this._TIENCOC = value;
					this.SendPropertyChanged("TIENCOC");
					this.OnTIENCOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAMGIA", DbType="BigInt")]
		public System.Nullable<long> GIAMGIA
		{
			get
			{
				return this._GIAMGIA;
			}
			set
			{
				if ((this._GIAMGIA != value))
				{
					this.OnGIAMGIAChanging(value);
					this.SendPropertyChanging();
					this._GIAMGIA = value;
					this.SendPropertyChanged("GIAMGIA");
					this.OnGIAMGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATHANHTOAN", DbType="Int")]
		public System.Nullable<int> DATHANHTOAN
		{
			get
			{
				return this._DATHANHTOAN;
			}
			set
			{
				if ((this._DATHANHTOAN != value))
				{
					this.OnDATHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._DATHANHTOAN = value;
					this.SendPropertyChanged("DATHANHTOAN");
					this.OnDATHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINDATPHONG_CHITIETDATPHONG", Storage="_CHITIETDATPHONGs", ThisKey="MADATPHONG", OtherKey="MADATPHONG")]
		public EntitySet<CHITIETDATPHONG> CHITIETDATPHONGs
		{
			get
			{
				return this._CHITIETDATPHONGs;
			}
			set
			{
				this._CHITIETDATPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINDATPHONG_CHITIETDATPHONG1", Storage="_CHITIETDATPHONGs1", ThisKey="MADATPHONG", OtherKey="MADATPHONG")]
		public EntitySet<CHITIETDATPHONG> CHITIETDATPHONGs1
		{
			get
			{
				return this._CHITIETDATPHONGs1;
			}
			set
			{
				this._CHITIETDATPHONGs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THONGTINDATPHONG_HOADON", Storage="_HOADONs", ThisKey="MADATPHONG", OtherKey="MADATPHONG")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_THONGTINDATPHONG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.THONGTINDATPHONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.THONGTINDATPHONGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_THONGTINDATPHONG", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.THONGTINDATPHONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.THONGTINDATPHONGs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDATPHONGs(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINDATPHONG = this;
		}
		
		private void detach_CHITIETDATPHONGs(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINDATPHONG = null;
		}
		
		private void attach_CHITIETDATPHONGs1(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINDATPHONG1 = this;
		}
		
		private void detach_CHITIETDATPHONGs1(CHITIETDATPHONG entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINDATPHONG1 = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINDATPHONG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.THONGTINDATPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TONKHOCT")]
	public partial class TONKHOCT
	{
		
		private string _MA;
		
		private System.Nullable<int> _TONDAU;
		
		private System.Nullable<int> _SOLUONGNHAP;
		
		private System.Nullable<int> _SOLUONGXUAT;
		
		private System.Nullable<System.DateTime> _NGAY;
		
		public TONKHOCT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="VarChar(5)")]
		public string MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this._MA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONDAU", DbType="Int")]
		public System.Nullable<int> TONDAU
		{
			get
			{
				return this._TONDAU;
			}
			set
			{
				if ((this._TONDAU != value))
				{
					this._TONDAU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGNHAP", DbType="Int")]
		public System.Nullable<int> SOLUONGNHAP
		{
			get
			{
				return this._SOLUONGNHAP;
			}
			set
			{
				if ((this._SOLUONGNHAP != value))
				{
					this._SOLUONGNHAP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGXUAT", DbType="Int")]
		public System.Nullable<int> SOLUONGXUAT
		{
			get
			{
				return this._SOLUONGXUAT;
			}
			set
			{
				if ((this._SOLUONGXUAT != value))
				{
					this._SOLUONGXUAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY", DbType="Date")]
		public System.Nullable<System.DateTime> NGAY
		{
			get
			{
				return this._NGAY;
			}
			set
			{
				if ((this._NGAY != value))
				{
					this._NGAY = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
